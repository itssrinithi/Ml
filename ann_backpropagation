import numpy as np
import pandas as pd

df = pd.read_csv('C:/Users/Lenovo/Documents/machine learning/IRIS.csv')

X = df.drop(df.columns[-1], axis=1).values
y = pd.get_dummies(df[df.columns[-1]]).values

def sigmoid(x):
    return 1 / (1 + np.exp(-x))

def sigmoid_derivative(x):
    return x * (1 - x)

n_input = X.shape[1]
n_hidden = 2
n_output = y.shape[1]

np.random.seed(1)
weights0 = 2 * np.random.random((n_input, n_hidden)) - 1
weights1 = 2 * np.random.random((n_hidden, n_output)) - 1

alpha = 1
iterations = 10000

for i in range(iterations):
    layer0 = X
    layer1 = sigmoid(np.dot(layer0, weights0))
    layer2 = sigmoid(np.dot(layer1, weights1))

    layer2_error = y - layer2
    layer2_delta = layer2_error * sigmoid_derivative(layer2)
    layer1_error = layer2_delta.dot(weights1.T)
    layer1_delta = layer1_error * sigmoid_derivative(layer1)

    weights1 += alpha * layer1.T.dot(layer2_delta)
    weights0 += alpha * layer0.T.dot(layer1_delta)

print("Final Output:")
print(layer2)
