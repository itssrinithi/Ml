import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.pipeline import make_pipeline
from sklearn.metrics import mean_squared_error, r2_score

# Load CSV
data = pd.read_csv('your_file.csv')

# Split data
X = data.drop(data.columns[-1], axis=1)
y = data[data.columns[-1]]

# Split train/test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Linear Regression
lr = LinearRegression()
lr.fit(X_train, y_train)
y_pred_lr = lr.predict(X_test)

# Polynomial Regression (degree 2)
pr = make_pipeline(PolynomialFeatures(degree=2), LinearRegression())
pr.fit(X_train, y_train)
y_pred_pr = pr.predict(X_test)

# Evaluate models
mse_lr = mean_squared_error(y_test, y_pred_lr)
r2_lr = r2_score(y_test, y_pred_lr)
mse_pr = mean_squared_error(y_test, y_pred_pr)
r2_pr = r2_score(y_test, y_pred_pr)

print("Linear Regression:")
print("Mean Squared Error:", mse_lr)
print("R-Squared:", r2_lr)

print("\nPolynomial Regression (degree 2):")
print("Mean Squared Error:", mse_pr)
print("R-Squared:", r2_pr)

# Plot
plt.scatter(X_test, y_test, label='Actual')
plt.plot(X_test, y_pred_lr, label='Linear')
plt.plot(X_test, y_pred_pr, label='Polynomial')
plt.legend()
plt.show()
